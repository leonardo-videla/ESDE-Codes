function [t, proc]=ESDE_LV_SPECIATION (M)  %An example of ESDE modelling a time-varying competitive network.   %Run through M epoch.   %Community matrix.   N=2^(M+1)+3;   A=zeros(N, N);  A(1:2, 1:2)=[-0.012 -0.012; -0.01 -0.01];  %We will use it later.   mask0=zeros(N,1);  mask1=zeros(N,1);  mask0(1)=1;  for k=3:N    [a,b,r]=decode(k);    if r==0      mask0(k)=1;    endif  endfor  mask1=ones(N, 1)-mask0;    c=0.05*ones(N, 1);   x0=zeros(N, 1);  x0(1, 1)=1;  x0(2, 1)=1;  sigma=0.03*ones(N, 1);  h=0.01;    seq=[-1];    LAMBDA_MAX=40;    j=1;   T=(1/LAMBDA_MAX)*rande(1);  [t, s]=Multi_LV (x0, c, A, sigma, T, h);   abundance0=s(1, :);  abundance1=s(2, :);   abtotal0=mask0'*s;  abtotal1=mask1'*s;  len=length(t);  proc=code(seq)*ones(1, len);  x=s(:, len);    if ( rand (1) < lambda_total (seq, x)/LAMBDA_MAX)      j++;    step=choose_step(seq, x);    [A, seq, x]=community_matrix (A, seq, x, step);      endif      while j <= M    T=(1/LAMBDA_MAX)*rande(1);   [t, s]=Multi_LV (x, c, A, sigma, T, h);   abundance0=[abundance0 s(1, :)];   abundance1=[abundance1 s(2, :)];   abtotal0=[abtotal0 mask0'*s];   abtotal1=[abtotal1 mask1'*s];      len=length(t);   x=s(:, len);   proc=[proc code(seq)*ones(1, len)];   if ( rand (1) < lambda_total (seq, x)/LAMBDA_MAX)      j++;    step=choose_step(seq, x);    [A, seq, x]=community_matrix (A, seq, x, step);       endif  endwhile    largo=size (proc, 2); t=0:h:(largo-1)*h; sp0=ones(1, largo); sp1=ones(1, largo); r=0; for j=1:largo  [a, b, r]=decode(proc(j));  sp0(j)=a;  sp1(j)=b; endfor  close all; figure 1; plot (t, sp0, "b", t, sp1, "r"); figure 2; plot (t, abundance0, "b", t, abundance1, "r"); figure 3; plot (t, abtotal0, "b", t, abtotal1, "r");  endfunction